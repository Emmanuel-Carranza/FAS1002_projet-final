mutate(name=factor(name)) %>%
select(c(name,`2021.0`)) %>%
na.omit()
names(life_country)[1] <- "location"
# PAR CONTINENT
life_continent <- life_continent_raw %>%
mutate(name=factor(name)) %>%
select(c(name,`2021.0`)) %>%
na.omit()
names(life_continent)[1] <- "location"
#
country_vax <- merge(country_vax,country_pop, by = "location") %>%
rename("population_2021" = "2021.0")
country_vax <- merge(country_vax,life_country, by = "location") %>%
rename("life_expectancy_2021" = "2021.0")
#FIRST GRAPH
tree <- treemap(country_vax,
index = "location",
vSize = "people_vaccinated",
type = "index")
#pays avec life exp le plus bas cest quoi le dosage de vaxx
lower_life_exp <- country_vax[order(as.integer(country_vax$life_expectancy_2021),decreasing = FALSE), ] %>%
head(20)
#graph avec pays low life exp
# ADD TITTLE, AXES, AND ANOOTATION
graph <- ggplot(lower_life_exp, aes(x=reorder(location,people_fully_vaccinated_per_hundred), y= people_fully_vaccinated_per_hundred))+
geom_bar(stat="identity")+
coord_flip()+
theme_minimal()
graph
#10 pays avec le plus de gens au monde = % de vaxxx
# head which max pop pis ensuite ggplot
biggest_countries <- country_vax[order(as.integer(country_vax$population_2021),decreasing = T), ] %>%
head(10)
# Effectif de population convertis en abréviation avec suffixe
biggest_countries <- biggest_countries %>%
mutate(pop_text = label_number_si(accuracy=0.1)(biggest_countries$population_2021))
# GRAPH 2
graph2 <- ggplot(biggest_countries,
aes(x= reorder(paste(location, pop_text),population_2021),
y= people_fully_vaccinated_per_hundred, fill=location))+
geom_bar(stat="identity", show.legend=FALSE)+
scale_fill_brewer(palette="Spectral")+
geom_text(aes(label = paste0(people_fully_vaccinated_per_hundred,"%")),
hjust = -0.1)+
labs(x = " ", y = "pourcentage ayant reçu 2 doses",
title = "Pourcentage de vaccinations pour les 10 pays les plus peuplés",
caption = "Data source: Our World In Data")+
expand_limits(y = 100)+
theme_minimal()+
coord_flip()
graph2
ggsave("graph2.jpg")
#Maintenant les pays avec l'espérance de vie la plus basse.
lowlifeexp_country <- country_vax[order(as.integer(country_vax$life_expectancy_2021),
decreasing = F), ] %>%
head(10)
lowlifeexp_country <- lowlifeexp_country %>%
mutate(pop_text = label_number_si(accuracy=0.1)(population_2021))
low_life_exp_graph <- ggplot(lowlifeexp_country,
aes(x= reorder(paste(location, pop_text),people_fully_vaccinated_per_hundred),
y= people_fully_vaccinated_per_hundred, fill=location))+
geom_bar(stat="identity", show.legend=FALSE)+
scale_fill_brewer(palette="Spectral")+
geom_text(aes(label = paste0(people_fully_vaccinated_per_hundred,"%")),
hjust = -0.1)+
labs(x = " ", y = "pourcentage ayant reçu 2 doses",
title = "Vaccinations pour les pays avec basse espérance de vie",
caption = "Data source: Our World In Data")+
expand_limits(y = 100)+
theme_minimal()+
coord_flip()
low_life_exp_graph
#NORDIC AMERICA POPULATION
link_nap = "https://worldpopulationreview.com/continents/north-america-population"
page_nap = read_html(link_nap) # Page internet qui contient un effectif de la population
n_america_pop = page_nap %>% # Selection du nombre recherché
html_nodes(".center span") %>%
html_text
n_america_pop = as.numeric(gsub(",","",n_america_pop)) # Soustraction des virgules
n_america_pop # 96564730 personne en Amérique du North
#NORTH AMERICAN LIFE EXPECTENCY
link_nal = "https://www.macrotrends.net/countries/NAC/north-america/life-expectancy"
page_nal = read_html(link_nal) # Page internet qui contient l'espérance de vie en Amérique du Nord
n_america_life = page_nal %>% # Selection du nombre recherché
html_nodes("li:nth-child(1) strong:nth-child(1)") %>%
html_text
n_america_life <- as.numeric(n_america_life)
#SOUTH AMERICAN POPULATION
link_sap = "https://worldpopulationreview.com/continents/south-america-population"
page_sap = read_html(link_sap) # Page internet qui contient la population d'Amérique du sud
s_america_pop = page_sap %>% # Sélection du nombre recherché
html_nodes(".center span") %>%
html_text
s_america_pop <- as.numeric(gsub(",","",s_america_pop))
s_america_pop # La population est 434260151 à ce jour
#SOUTH AMERICAN LIFE EXPECTENCY
link_sal = "https://www.macrotrends.net/countries/LCR/latin-america-and-the-caribbean/life-expectancy#:~:text=The%20current%20life%20expectancy%20for,a%200%25%20increase%20from%202019"
page_sal = read_html(link_sal) # Page internet qui contient la population d'Amérique du sud
s_america_life = page_sal %>% # Sélection du nombre recherché
html_nodes("li:nth-child(1) strong:nth-child(1)") %>%
html_text
s_america_life <- as.numeric(s_america_life)
s_america_life # L'espérance de vie est de 75.24 ans
# Création d'un data frame pour les données manquantes d'espérance de vie
american_life_exp <- data.frame( c("North America", "South America"),
c(n_america_life, s_america_life))
names(american_life_exp) <- c("location","2021.0")
continent_lifenew <- rbind(life_continent,american_life_exp)
# jonction de ces données à life_continent
# Création d'un data frame pour les données manquantes de population
american_pop <- data.frame( c("North America", "South America"),
c(n_america_pop, s_america_pop))
names(american_pop) <- c("location","2021.0")
continent_pop_new <- rbind(continent_pop,american_pop)
# Jonction des deux nouvelles banques de données à celle des continents de
# Our World in Data
continent_pop_life <- merge(continent_pop_new, continent_lifenew, by = "location") %>%
rename("population" = "2021.0.x",
"life_expectancy" = "2021.0.y")
# Merge cette dernière avec ma banque de données des vaccinations par continents
continent_vax <- merge(continent_vax, continent_pop_life, by = "location")
# Nouvelle variable qui donne les chiffres en abréviation
continent_vax <- continent_vax %>%
mutate(pop_text = label_number_si(accuracy=0.1)(population))
graph_continent <- ggplot(continent_vax,
aes(x= reorder(paste(location, pop_text),people_fully_vaccinated_per_hundred),
y= people_fully_vaccinated_per_hundred, fill=location))+
geom_bar(stat="identity", show.legend=FALSE)+
scale_fill_brewer(palette="Spectral")+
geom_text(aes(label = paste0(people_fully_vaccinated_per_hundred,"%")),
hjust = -0.1)+
labs(x = " ", y = "pourcentage ayant reçu 2 doses",
title = "Pourcentage de vaccinations par continent",
caption = "Data source: Our World In Data")+
expand_limits(y = 100)+
theme_minimal()+
coord_flip()
graph_continent
View(country_vax)
country_vax <- country_vax %>%
mutate(new_vax_per_100 = paste(total_vaccinations)/population_2021)
country_vax <- country_vax %>%
group_by(location)%>%
mutate(Percentage=paste0(round(total_vaccinations/(population_2021)*100,2),"%"))
country_vax <- country_vax %>%
group_by(location)%>%
mutate(Percentage=paste0(round(total_vaccinations/(population_2021)*100,2),))
country_vax <- country_vax %>%
group_by(location)%>%
mutate(Percentage=paste0(round(total_vaccinations/(population_2021)*100,2)))
country_vax <- country_vax %>%
mutate("same_percentage" = ifelse(total_vaccination_per_hundred == Percentage, "Same","Incorrect"))
country_vax <- country_vax %>%
mutate("same_percentage" = ifelse(total_vaccinations_per_hundred == Percentage, "Same","Incorrect"))
total_vax100_incorrect <- country_vax %>%
select(same_percentage = "Incorrect")
total_vax100_incorrect <- country_vax[country_vax$Percentage == "Incorrect", ]
total_vax100_incorrect <- country_vax[country_vax$Percentage == "Incorrect" ]
total_vax100_incorrect <- country_vax[country_vax$same_percentage == "Incorrect" ]
total_vax100_incorrect <- country_vax[country_vax$same_percentage == "Incorrect", ]
View(total_vax100_incorrect)
total_vax100_incorrect <- country_vax[country_vax$same_percentage == "Incorrect", ] %>%
select(c("location", "total_vaccinations_per_hundred", "Percentage", "same_percentage"))
#FIRST GRAPH
tree <- treemap(country_vax,
index = "location",
vSize = "people_vaccinated",
type = "index")
ggsave("data/processed/country_vax.csv")
write.csv(country_vax,"data/processed/country_vax.csv", row.names = FALSE)
country_vax_cacul <- country_vax %>%
group_by(location)%>%
mutate(Percentage=paste0(round(total_vaccinations/(population_2021)*100,2)))
country_vax_cacul <- country_vax_cacul %>%
mutate("same_percentage" = ifelse(total_vaccinations_per_hundred == Percentage, "Same","Incorrect"))
total_vax100_incorrect <- country_vax_cacul[country_vax_cacul$same_percentage == "Incorrect", ] %>%
select(c("location", "total_vaccinations_per_hundred", "Percentage", "same_percentage"))
View(continent_pop_life)
View(continent_vax)
write.csv(continent_vax,"data/processed/continent_vax.csv", row.names = FALSE)
install.packages("zotero")
install.packages("Zotero")
install.packages("citr")
install.packages("citr")
devtools::install_github("crsh/citr")
library(citr)
View(continent_pop_life)
View(continent_pop_new)
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(readxl)
library(rvest)
library(rmarkdown)
paged_table(biggest_countries)
knitr::opts_chunk$set(echo = FALSE)
library(rmarkdown)
#Lecture du fichier csv
vax_raw <- read_csv("data/raw/covid19vacc.csv")
library(tidyverse)
library(readxl)
library(rmarkdown)
#Lecture du fichier csv
vax_raw <- read_csv("data/raw/covid19vacc.csv")
paged_table(vax_raw)
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(readxl)
library(rmarkdown)
# Accès aux informations du le fichier local.
vacc_db_info <- file.info("data/raw/covid19vacc.csv")
#Si le fichier n'a pas été mis a jour dans les dernières 24 heures,
#J'applique la fonction download.file pour télécharger la banque de données.
ifelse(difftime(Sys.time(),vacc_db_info$ctime, units = "hours") > 24,
download.file("https://github.com/owid/covid-19-data/raw/master/public/data/vaccinations/vaccinations.csv", destfile = "data/raw/covid19vacc.csv"),
"La banque de données a été mise à jour dans les 24 dernières heures")
#Lecture du fichier csv
vax_raw <- read_csv("data/raw/covid19vacc.csv")
paged_table(vax_raw)
# Accès aux informations du le fichier local.
fileinfo_pop <- file.info("data/raw/gapminder_pop.xlsx")
#Si le fichier n'a pas été mis a jour dans les 30 derniers jours,
#J'applique la fonction download.file pour télécharger la banque de données.
ifelse(difftime(Sys.time(),fileinfo_pop$ctime, units = "days" ) > 30 , download.file("https://docs.google.com/spreadsheets/d/14_suWY8fCPEXV0MH7ZQMZ-KndzMVsSsA5HdR-7WqAC0/export?format=xlsx",
destfile = "data/raw/gapminder_pop.xlsx"),
"La banque de données a été mise à jour dans les 30 derniers jours.")
#Lecture du fichier excel pour la population des pays individuellement.
country_pop_raw <- read_xlsx("data/raw/gapminder_pop.xlsx", sheet = 7, range = "A3:KQ200")
#Lecture du même fichier excel mais pour la population par continent.
continent_pop_raw <- read_xlsx("data/raw/gapminder_pop.xlsx", sheet = 7, range = "A202:KQ207")
paged_table(country_pop_raw)
paged_table(continent_pop_raw)
# J'applique la fonction pour avoir des informations sur le fichier local.
fileinfo_life <- file.info("data/raw/gapminder_lifeexp.xlsx")
#Si le fichier n'a pas été mis a jour dans les 30 derniers jours,
#J'applique la fonction download.file pour télécharger la banque de données.
ifelse(difftime(Sys.time(),fileinfo_pop$ctime, units = "days" ) > 30, download.file("https://docs.google.com/spreadsheets/d/11mulzUH3_cueq-V9D5KIlo9oHE9YYZrUSeVyCin7_rM/export?format=xlsx", destfile = "data/raw/gapminder_lifeexp.xlsx"),
"La banque de données a été mise à jour dans les 30 derniers jours.")
#Lecture du fichier excel pour l'espérance de vie groupé par pays.
life_country_raw <- read_xlsx("data/raw/gapminder_lifeexp.xlsx", sheet = 6, range = "A4:KQ201")
#Lecture du fichier excel pour l'espérance de vie groupé par continent.
life_continent_raw <- read_xlsx("data/raw/gapminder_lifeexp.xlsx", sheet = 6, range = "A203:KQ208")
paged_table(life_country_raw)
paged_table(life_continent_raw)
library(rvest)
#NORDIC AMERICA POPULATION
link_nap = "https://worldpopulationreview.com/continents/north-america-population"
page_nap = read_html(link_nap) # Page internet qui contient un effectif de la population
n_america_pop = page_nap %>% # Selection du nombre recherché
html_nodes(".center span") %>%
html_text
n_america_pop = as.numeric(gsub(",","",n_america_pop)) # Soustraction des virgules
n_america_pop # 96564730 personne en Amérique du North
#NORTH AMERICAN LIFE EXPECTENCY
link_nal = "https://www.macrotrends.net/countries/NAC/north-america/life-expectancy"
page_nal = read_html(link_nal) # Page internet qui contient l'espérance de vie en Amérique du Nord
n_america_life = page_nal %>% # Selection du nombre recherché
html_nodes("li:nth-child(1) strong:nth-child(1)") %>%
html_text
n_america_life <- as.numeric(n_america_life)
#SOUTH AMERICAN POPULATION
link_sap = "https://worldpopulationreview.com/continents/south-america-population"
page_sap = read_html(link_sap) # Page internet qui contient la population d'Amérique du sud
s_america_pop = page_sap %>% # Sélection du nombre recherché
html_nodes(".center span") %>%
html_text
s_america_pop <- as.numeric(gsub(",","",s_america_pop))
s_america_pop # La population est 434260151 à ce jour
#SOUTH AMERICAN LIFE EXPECTENCY
link_sal = "https://www.macrotrends.net/countries/LCR/latin-america-and-the-caribbean/life-expectancy#:~:text=The%20current%20life%20expectancy%20for,a%200%25%20increase%20from%202019"
page_sal = read_html(link_sal) # Page internet qui contient la population d'Amérique du sud
s_america_life = page_sal %>% # Sélection du nombre recherché
html_nodes("li:nth-child(1) strong:nth-child(1)") %>%
html_text
s_america_life <- as.numeric(s_america_life)
s_america_life # L'espérance de vie est de 75.24 ans
continent_pop_web <- data.frame (location  = c("North America", "South America"),
second_column = c(n_america_pop, s_america_pop )
)
View(continent_pop_web)
continent_pop_web <- data.frame (location  = c("North America", "South America"),
population = c(n_america_pop, s_america_pop )
)
s_america_lidf <- data.frame (first_column  = c("value_1", "value_2", ...),
second_column = c("value_1", "value_2", ...)
)fe <- as.numeric(s_america_life)
s_america_life = page_sal %>% # Sélection du nombre recherché
html_nodes("li:nth-child(1) strong:nth-child(1)") %>%
html_text
s_america_lidf
link_sal = "https://www.macrotrends.net/countries/LCR/latin-america-and-the-caribbean/life-expectancy#:~:text=The%20current%20life%20expectancy%20for,a%200%25%20increase%20from%202019"
page_sal = read_html(link_sal) # Page internet qui contient la population d'Amérique du sud
s_america_life = page_sal %>% # Sélection du nombre recherché
html_nodes("li:nth-child(1) strong:nth-child(1)") %>%
html_text
s_america_lidf
s_america_life
_america_life <- as.numeric(n_america_life)
s_america_life <- as.numeric(n_america_life)
s_america_life # L'espérance de vie est de 75.24 ans
n_america_life <- as.numeric(n_america_life)
s_america_life <- as.numeric(s_america_life)
s_america_life # L'espérance de vie est de 75.24 ans
link_sal = "https://www.macrotrends.net/countries/LCR/latin-america-and-the-caribbean/life-expectancy#:~:text=The%20current%20life%20expectancy%20for,a%200%25%20increase%20from%202019"
page_sal = read_html(link_sal) # Page internet qui contient la population d'Amérique du sud
s_america_life = page_sal %>% # Sélection du nombre recherché
html_nodes("li:nth-child(1) strong:nth-child(1)") %>%
html_text
s_america_life <- as.numeric(s_america_life)
s_america_life # L'espérance de vie est de 75.24 ans
continent_life_web <- data.frame (location  = c("North America", "South America"),
life_expectancy = c(n_america_life, s_america_life )
)
View(continent_life_web)
View(continent_pop_raw)
View(continent_pop_web)
continent_life_pop_web <- merge(continent_life_web, continent_pop_web, by = "location")
View(continent_life_pop_web)
knitr::opts_chunk$set(echo = FALSE)
#MANIPULATION BANQUE DE DONNÉES DES VACCINS
#Je change le type de classe de la valeur location pour que ca soit
#une variable catégorielle.
#Je recode les iso_code des pays qui n'était pas identifié par trois lettres
#Je recode les iso_codes des observations qui ont pour location : une catégorie
#socio-économique.
#Je déselectionne les variables que je considère moins importantes ou
#qui est remplit de NAs.  Par exemple total_boosters qui a surment été crée
#seulement après la découverte de nouvelle variante néccésitant une 3iem dose.
# Si j'enlève les NAs à la fin, je coupe ma banque de données de 50%
vaxd <- vax_raw %>%
mutate(location=factor(location),
iso_code=recode(iso_code,
"OWID_KOS"="KOS",
"OWID_CYN"="CYN",
"OWID_SCT"="SCT",
"OWID_WLS"="WLS",
"OWID_ENG"="ENG",
"OWID_NIR"="NIR",
"OWID_UMC"="income",
"OWID_LIC"="income",
"OWID_HIC"="income",
"OWID_LMC"="income")) %>%
select(-c(total_vaccinations,daily_vaccinations_raw,total_boosters_per_hundred,total_boosters,daily_vaccinations_per_million,daily_people_vaccinated_per_hundred,daily_people_vaccinated,daily_vaccinations)) %>%
na.omit() # J'enlève les NA ici parce que trop de ne mettent pas tout les variables à jour quotidiennement mais une fois par semaine ou moins. Alors je vais simplement prendre la dernière observation qui est complète
# Sous ensemble de ceux vaccinés, groupé par pays.
country_vax <- vaxd[vaxd$iso_code %like% "^[a-zA-Z]{3}$", ]
```{r}
#MANIPULATION BANQUE DE DONNÉES DES VACCINS
#Je change le type de classe de la valeur location pour que ca soit
#une variable catégorielle.
#Je recode les iso_code des pays qui n'était pas identifié par trois lettres
#Je recode les iso_codes des observations qui ont pour location : une catégorie
#socio-économique.
#Je déselectionne les variables que je considère moins importantes ou
#qui est remplit de NAs.  Par exemple total_boosters qui a surment été crée
#seulement après la découverte de nouvelle variante néccésitant une 3iem dose.
# Si j'enlève les NAs à la fin, je coupe ma banque de données de 50%
vaxd <- vax_raw %>%
mutate(location=factor(location),
iso_code=recode(iso_code,
"OWID_KOS"="KOS",
"OWID_CYN"="CYN",
"OWID_SCT"="SCT",
"OWID_WLS"="WLS",
"OWID_ENG"="ENG",
"OWID_NIR"="NIR",
"OWID_UMC"="income",
"OWID_LIC"="income",
"OWID_HIC"="income",
"OWID_LMC"="income")) %>%
select(-c(total_vaccinations,daily_vaccinations_raw,total_boosters_per_hundred,total_boosters,daily_vaccinations_per_million,daily_people_vaccinated_per_hundred,daily_people_vaccinated,daily_vaccinations)) %>%
na.omit() # J'enlève les NA ici parce que trop de ne mettent pas tout les variables à jour quotidiennement mais une fois par semaine ou moins. Alors je vais simplement prendre la dernière observation qui est complète
# Sous ensemble de ceux vaccinés, groupé par pays.
country_vax <- vaxd[vaxd$iso_code %like% "^[a-zA-Z]{3}$", ]
library(tidyverse)
library(readxl)
library(rmarkdown)
library(lubridate)
library(data.table)
library(arsenal)
library(treemap)
library(RColorBrewer)
#MANIPULATION BANQUE DE DONNÉES DES VACCINS
#Je change le type de classe de la valeur location pour que ca soit
#une variable catégorielle.
#Je recode les iso_code des pays qui n'était pas identifié par trois lettres
#Je recode les iso_codes des observations qui ont pour location : une catégorie
#socio-économique.
#Je déselectionne les variables que je considère moins importantes ou
#qui est remplit de NAs.  Par exemple total_boosters qui a surment été crée
#seulement après la découverte de nouvelle variante néccésitant une 3iem dose.
# Si j'enlève les NAs à la fin, je coupe ma banque de données de 50%
vaxd <- vax_raw %>%
mutate(location=factor(location),
iso_code=recode(iso_code,
"OWID_KOS"="KOS",
"OWID_CYN"="CYN",
"OWID_SCT"="SCT",
"OWID_WLS"="WLS",
"OWID_ENG"="ENG",
"OWID_NIR"="NIR",
"OWID_UMC"="income",
"OWID_LIC"="income",
"OWID_HIC"="income",
"OWID_LMC"="income")) %>%
select(-c(total_vaccinations,daily_vaccinations_raw,total_boosters_per_hundred,total_boosters,daily_vaccinations_per_million,daily_people_vaccinated_per_hundred,daily_people_vaccinated,daily_vaccinations)) %>%
na.omit() # J'enlève les NA ici parce que trop de ne mettent pas tout les variables à jour quotidiennement mais une fois par semaine ou moins. Alors je vais simplement prendre la dernière observation qui est complète
# Sous ensemble de ceux vaccinés, groupé par pays.
country_vax <- vaxd[vaxd$iso_code %like% "^[a-zA-Z]{3}$", ]
# Seulement la dernière observation de chaque pays
country_vax <- country_vax %>%
group_by(location) %>%
slice(which.max(as.Date(date, '%Y/%m/%d')))
View(country_vax)
# Sous ensemble de ceux vacciné, groupé par continent
continent_vax <- vaxd[vaxd$iso_code %like% "OWID", ] %>%
mutate(location=factor(location))
#J'enlève l'union européenne
continent_vax <- continent_vax[continent_vax$location %in% c("Africa","Asia","Europe","North America","Oceania","South America","World"), ]
#Je prend seulement la dernière observations de chaque continent.
continent_vax <- continent_vax %>%
group_by(location) %>%
slice(which.max(as.Date(date, '%Y/%m/%d')))
# Je séléctionne les variabes importantes quant à la poulation par pays
country_pop <- country_pop_raw %>%
mutate(name=factor(name)) %>%
select(c(name, `2021.0`))
# Je séléctionne les variables importantes quant à la poulation par continent.
continent_pop <- continent_pop_raw %>%
select(c(name,`2022.0`))
# Je renomme le nom de la colonne pour pouvoir la "merge" avec
# la banque de données de vaccination.
names(country_pop)[1] <- "location"
names(continent_pop)[1] <- "location"
# PAR PAYS, je prend juste 2021 pcq les différence d'une annee a lautre sont minime.
life_country <- life_country_raw %>%
mutate(name=factor(name)) %>%
select(c(name,`2021.0`)) %>%
na.omit()
names(life_country)[1] <- "location"
# PAR CONTINENT
life_continent <- life_continent_raw %>%
mutate(name=factor(name)) %>%
select(c(name,`2021.0`)) %>%
na.omit()
names(life_continent)[1] <- "location"
#Je change le type de classe de la valeur location pour que ca soit
#une variable catégorielle.
#Je recode les iso_code des pays qui n'était pas identifié par trois lettres
#Je recode les iso_codes des observations qui ont pour location : une catégorie
#socio-économique.
#Je déselectionne les variables que je considère moins importantes ou
#qui est remplit de NAs.  Par exemple total_boosters qui a surment été crée
#seulement après la découverte de nouvelle variante néccésitant une 3iem dose.
# Si j'enlève les NAs à la fin, je coupe ma banque de données de 50%
vaxd <- vax_raw %>%
mutate(location=factor(location),
iso_code=recode(iso_code,
"OWID_KOS"="KOS",
"OWID_CYN"="CYN",
"OWID_SCT"="SCT",
"OWID_WLS"="WLS",
"OWID_ENG"="ENG",
"OWID_NIR"="NIR",
"OWID_UMC"="income",
"OWID_LIC"="income",
"OWID_HIC"="income",
"OWID_LMC"="income")) %>%
select(-c(daily_vaccinations_raw,total_boosters_per_hundred,total_boosters,daily_vaccinations_per_million,daily_people_vaccinated_per_hundred,daily_people_vaccinated,daily_vaccinations)) %>%
na.omit() # J'enlève les NA ici parce que trop de ne mettent pas tout les variables à jour quotidiennement mais une fois par semaine ou moins. Alors je vais simplement prendre la dernière observation qui est complète
# Sous ensemble de ceux vaccinés, groupé par pays.
country_vax <- vaxd[vaxd$iso_code %like% "^[a-zA-Z]{3}$", ]
# Seulement la dernière observation de chaque pays
country_vax <- country_vax %>%
group_by(location) %>%
slice(which.max(as.Date(date, '%Y/%m/%d')))
# PAR PAYS, je prend juste 2021 pcq les différence d'une annee a lautre sont minime.
life_country <- life_country_raw %>%
mutate(name=factor(name)) %>%
select(c(name,`2021.0`)) %>%
na.omit()
names(life_country)[1] <- "location"
# PAR CONTINENT
life_continent <- life_continent_raw %>%
mutate(name=factor(name)) %>%
select(c(name,`2021.0`)) %>%
na.omit()
names(life_continent)[1] <- "location"
country_vax <- merge(country_vax, country_pop, life_country, by = "location")
class(country_vax)
class(country_vax$location)
class(country_pop$location)
class(life_country$location)
country_vax <- merge(country_vax, country_pop, by = "location")
country_vax <- merge(country_vax, life_country, by = "location")
country_vax <- country_vax %>%
rename("population" = "2021.0.x",
"life_expectancy" = "2021.0.y")
View(continent_vax)
class(continent_life_pop_web$location)
continent_vax <- merge(continent_vax, continent_life_pop_web, by = "location")
# Sous ensemble de ceux vacciné, groupé par continent
continent_vax <- vaxd[vaxd$iso_code %like% "OWID", ] %>%
mutate(location=factor(location))
#J'enlève l'union européenne
continent_vax <- continent_vax[continent_vax$location %in% c("Africa","Asia","Europe","North America","Oceania","South America","World"), ]
#Je prend seulement la dernière observations de chaque continent.
continent_vax <- continent_vax %>%
group_by(location) %>%
slice(which.max(as.Date(date, '%Y/%m/%d')))
View(continent_vax)
savehistory("~/Documents/FAS 1002  initiation prog/final_1002/FAS1002_projet-final/lost_history.Rhistory")
